package com.docker.vulnerability.scanner.dockerscanback.config;

import io.jsonwebtoken.ExpiredJwtException;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;


@ControllerAdvice
@Slf4j
public class ExceptionMapper extends ResponseEntityExceptionHandler {

    @ExceptionHandler(value = {Exception.class})
    protected ResponseEntity<DockerError> handleScrutinyException(Exception ex) {
        if (ex.getClass().isAssignableFrom(ExpiredJwtException.class)) {
            DockerError dockerError = new DockerError(ex.getMessage());
            return ResponseEntity
                    .status(500)
                    .body(dockerError);
        } else {
            log.error("Docker error : ", ex);
            DockerError dockerError = new DockerError(ex.getMessage());
            return ResponseEntity
                    .status(500)
                    .body(dockerError);
        }

    }
}



