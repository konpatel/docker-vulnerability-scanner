package com.docker.vulnerability.scanner.dockerscanback.controller;

import com.docker.vulnerability.scanner.dockerscanback.dto.ImageDto;
import com.docker.vulnerability.scanner.dockerscanback.dto.UserImageDto;
import com.docker.vulnerability.scanner.dockerscanback.service.DockerService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.util.List;

@RestController
@RequiredArgsConstructor
@RequestMapping("/docker")
@CrossOrigin(origins = "http://localhost:4200")
public class DockerController {

    private final DockerService dockerService;

    @PostMapping("/image/save")
    public ImageDto saveImage(@RequestBody UserImageDto userImageDto) throws InterruptedException, IOException {
        return this.dockerService.saveImage(userImageDto);
    }

    @PostMapping("/image/scan")
    public Object scanImage(@RequestBody ImageDto imageDto) throws InterruptedException, IOException {
        return this.dockerService.scanImage(imageDto);
    }

    @GetMapping("/image/get-all-images/{email}")
    public List<ImageDto> getAllImages(@PathVariable String email) {
        return dockerService.getAllImages(email);
    }

    @GetMapping("/image/delete/{id}")
    public void deleteImage(@PathVariable String id) {
        dockerService.deleteImage(id);
    }
}
