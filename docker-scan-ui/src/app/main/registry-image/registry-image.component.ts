import {Component, OnInit} from '@angular/core';
import {ImageDto} from "../../dtos/imageDto";
import {MatTableDataSource} from "@angular/material/table";
import {ActivatedRoute, Router} from "@angular/router";
import {DockerService} from "../../services/docker.service";
import {FormControl, FormGroup} from "@angular/forms";
import {UserImageDto} from "../../dtos/userImageDto";

@Component({
  selector: 'app-registry-image',
  templateUrl: './registry-image.component.html',
  styleUrls: ['./registry-image.component.scss']
})
export class RegistryImageComponent implements OnInit {

  messages: string[] = ['sasa'];
  displayedColumns: string[] = ['id', 'repository', 'tag', 'pulledOn', 'actions'];
  dataSource: MatTableDataSource<ImageDto> = new MatTableDataSource<ImageDto>();

  imageForm: FormGroup = new FormGroup({
    repository: new FormControl(),
    tag: new FormControl()
  });
  constructor(private router: Router, private route: ActivatedRoute,
              private dockerService: DockerService) {
  }

  ngOnInit(): void {
    this.getAllImagesByUser();
  }

  scan(imageDto: ImageDto): void {
    this.dockerService.scanImage(imageDto).subscribe(res => {
    });
  }

  save(): void {
    const imageDto: ImageDto = this.imageForm?.value;
    const email: string | null = sessionStorage.getItem('email');
    const userImage: UserImageDto = {
      email: email,
      image: imageDto
    };
    this.dockerService.saveImage(userImage).subscribe((image) => {
      console.log(image);
      this.reset();
      this.getAllImagesByUser();
    });
  }

  private getAllImagesByUser(): void {
    const email: string | null = sessionStorage.getItem('email');
    this.dockerService.getAllImagesByUser(email).add(()=>this.dataSource = new MatTableDataSource<ImageDto>(this.dockerService.images));
    console.log(this.dataSource);
  }

  reset(): void {
    this.imageForm.reset();
  }

  clear(): void {
    this.messages = [];
  }

}
