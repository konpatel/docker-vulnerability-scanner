import {Injectable} from '@angular/core';
import {HttpClient} from "@angular/common/http";
import {Observable} from "rxjs";
import {UserTokenDto} from "../dtos/userTokenDto";
import {environment} from "../../environments/environment";
import {ImageDto} from "../dtos/imageDto";

@Injectable({
  providedIn: 'root'
})
export class DockerService {

  baseUrl = environment.baseUrl;

  constructor(private http: HttpClient) {
  }

  public createToken(userTokenDto: UserTokenDto): Observable<UserTokenDto> {
    return this.http.post(this.baseUrl + '/user/token/create', userTokenDto) as Observable<UserTokenDto>;
  }

  public authenticate(userTokenDto: UserTokenDto): Observable<UserTokenDto> {
    return this.http.post(this.baseUrl + '/user/token/authenticate', userTokenDto) as Observable<UserTokenDto>;
  }

  public logout(): Observable<any> {
    return this.http.get(this.baseUrl + '/user/sign-out-user') as Observable<any>;
  }

  public isUserLoggedIn(): boolean {
    const user = sessionStorage.getItem('JWT_TOKEN');
    return user !== null;
  }

  public saveImage(imageDto: ImageDto): Observable<ImageDto> {
    return this.http.post(this.baseUrl + '/docker/image/save', imageDto) as Observable<ImageDto>;
  }

  public scanImage(imageDto: ImageDto): Observable<string> {
    return this.http.post(this.baseUrl + '/image/scan', imageDto) as Observable<string>;
  }

}
